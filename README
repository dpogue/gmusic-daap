This is pydaap, the Python-based daap library.

Why this?  There doesn't seem to exist a standalone daap library that can
be used in a cross-platform fashion for the use-case that Miro is anticipating.

We do however borrow heavily from existing projects, in trying to write this
we hope that there is a decoupling of the protocol implementation and an
embedding application so this can be used elsewhere.

To build:

python buildconst.py

To run:

python daapd.py /path/to/share

Or:

import libdaap

To run the example client:

python daap.py <ip>:<port>

First command builds the constants used for the DAAP protocol, based on
the forked-daapd code.

Second command actually runs the server.  You can append a -h flag to
get a list of supported options.  You can also import daap.py for use
in your own application.

Thanks goes to the existing implementators of open source daap clients
and servers and especially to forked-daapd of which the authors have
used extensively for source-level documentation.

The author would also like to thank 3rd party Python modules which this
program utilizes, which is credited in the CONTRIB file.

